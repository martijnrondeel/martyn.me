name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy

    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      CI: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo ::set-output name=NVMRC::$(cat .nvmrc)
      id: nvm

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '${{ steps.nvm.outputs.NVMRC }}'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Set yarn cache
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Compile  
      run: yarn build
      env:
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}

    - name: Copy files to web directory
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "public"
        target: "/var/www"
        rm: true
